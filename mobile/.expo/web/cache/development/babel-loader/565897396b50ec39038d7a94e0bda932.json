{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useRoute } from \"@react-navigation/native\";\nimport dayjs from \"dayjs\";\nimport clsx from \"clsx\";\nimport { generateProgressPercentage } from \"../utils/generate-progress-percentage\";\nimport { BackButton } from \"../components/BackButton\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { CheckBox } from \"../components/CheckBox\";\nimport { useEffect, useState } from \"react\";\nimport { Loading } from \"../components/Loading\";\nimport { api } from \"../lib/axios\";\nimport { HabitEmpty } from \"../components/HabitsEmpty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Habit() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dayInfo = _useState4[0],\n    setDayInfo = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    completedHabits = _useState6[0],\n    setCompletedHabits = _useState6[1];\n  var route = useRoute();\n  var _ref = route.params,\n    date = _ref.date;\n  var parsedDate = dayjs(date);\n  var isDateInPast = parsedDate.endOf('day').isBefore(new Date());\n  var dayOfWeek = parsedDate.format('dddd');\n  var dayAndMonth = parsedDate.format('DD/MM');\n  var habitsProgress = dayInfo != null && dayInfo.possibleHabits.length ? generateProgressPercentage(dayInfo.possibleHabits.length, completedHabits.length) : 0;\n  function fetchHabits() {\n    return _fetchHabits.apply(this, arguments);\n  }\n  function _fetchHabits() {\n    _fetchHabits = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield api.get('/day', {\n          params: {\n            date: date\n          }\n        });\n        setDayInfo(response.data);\n        setCompletedHabits(response.data.completedHabits);\n      } catch (error) {\n        console.log(error);\n        Alert.alert('Ops', 'Não foi possível carregar as informações dos hábitos.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return _fetchHabits.apply(this, arguments);\n  }\n  function handleToggleHabit(_x) {\n    return _handleToggleHabit.apply(this, arguments);\n  }\n  function _handleToggleHabit() {\n    _handleToggleHabit = _asyncToGenerator(function* (habitId) {\n      try {\n        yield api.patch(\"/habits/\" + habitId + \"/toggle\");\n        if (completedHabits.includes(habitId)) {\n          setCompletedHabits(function (prevState) {\n            return prevState.filter(function (habit) {\n              return habit !== habitId;\n            });\n          });\n        } else {\n          setCompletedHabits(function (prevState) {\n            return [].concat(_toConsumableArray(prevState), [habitId]);\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        Alert.alert('Ops', 'Não foi possível atualizar o status do hábito');\n      }\n    });\n    return _handleToggleHabit.apply(this, arguments);\n  }\n  useEffect(function () {\n    fetchHabits();\n  }, []);\n  if (loading) {\n    return _jsx(Loading, {});\n  }\n  return _jsx(_StyledComponent, {\n    className: \"flex-1 bg-background px-8 pt-16\",\n    component: View,\n    children: _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: {\n        paddingBottom: 100\n      },\n      children: [_jsx(BackButton, {}), _jsx(_StyledComponent, {\n        className: \"mt-6 text-zinc-400 font-semibold text-base lowercase\",\n        component: Text,\n        children: dayOfWeek\n      }), _jsx(_StyledComponent, {\n        className: \"text-white font-extrabold text-3xl\",\n        component: Text,\n        children: dayAndMonth\n      }), _jsx(ProgressBar, {\n        progress: habitsProgress\n      }), _jsx(_StyledComponent, {\n        className: clsx(\"mt-6\", _defineProperty({}, \"opacity-50\", isDateInPast)),\n        component: View,\n        children: dayInfo != null && dayInfo.possibleHabits ? dayInfo == null ? void 0 : dayInfo.possibleHabits.map(function (habit) {\n          return _jsx(CheckBox, {\n            title: habit.title,\n            checked: completedHabits.includes(habit.id),\n            disabled: isDateInPast,\n            onPress: function onPress() {\n              return handleToggleHabit(habit.id);\n            }\n          }, habit.id);\n        }) : _jsx(HabitEmpty, {})\n      }), isDateInPast && _jsx(_StyledComponent, {\n        className: \"text-white mt-10 text-center\",\n        component: Text,\n        children: \"Voc\\xEA n\\xE3o pode editar um h\\xE1bitos de uma passada.\"\n      })]\n    })\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"mt-6\": {\n      \"marginTop\": 24\n    },\n    \"mt-10\": {\n      \"marginTop\": 40\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"bg-background\": {\n      \"backgroundColor\": \"#09090A\"\n    },\n    \"px-8\": {\n      \"paddingLeft\": 32,\n      \"paddingRight\": 32\n    },\n    \"pt-16\": {\n      \"paddingTop\": 64\n    },\n    \"text-center\": {\n      \"textAlign\": \"center\"\n    },\n    \"font-semibold\": {\n      \"fontWeight\": \"600\"\n    },\n    \"font-extrabold\": {\n      \"fontWeight\": \"800\"\n    },\n    \"lowercase\": {\n      \"textTransform\": \"lowercase\"\n    },\n    \"text-zinc-400\": {\n      \"color\": \"#a1a1aa\"\n    },\n    \"text-white\": {\n      \"color\": \"#fff\"\n    },\n    \"opacity-50\": {\n      \"opacity\": 0.5\n    },\n    \"text-base\": {\n      \"fontSize\": 16,\n      \"lineHeight\": 24\n    },\n    \"text-3xl\": {\n      \"fontSize\": 30,\n      \"lineHeight\": 36\n    }\n  }\n});","map":{"version":3,"names":["useRoute","dayjs","clsx","generateProgressPercentage","BackButton","ProgressBar","CheckBox","useEffect","useState","Loading","api","HabitEmpty","Habit","loading","setLoading","dayInfo","setDayInfo","completedHabits","setCompletedHabits","route","params","date","parsedDate","isDateInPast","endOf","isBefore","Date","dayOfWeek","format","dayAndMonth","habitsProgress","possibleHabits","length","fetchHabits","response","get","data","error","console","log","Alert","alert","handleToggleHabit","habitId","patch","includes","prevState","filter","habit","paddingBottom","map","title","id"],"sources":["/home/gabrielviol/AULAS/nlw/nlw-setup/mobile/src/screens/Habit.tsx"],"sourcesContent":["import { Alert, ScrollView, Text, View } from \"react-native\";\nimport { useRoute } from \"@react-navigation/native\";\nimport dayjs from \"dayjs\";\nimport clsx from \"clsx\";\n\nimport { generateProgressPercentage } from '../utils/generate-progress-percentage'\n\nimport { BackButton } from \"../components/BackButton\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { CheckBox } from \"../components/CheckBox\";\nimport { useEffect, useState } from \"react\";\nimport { Loading } from \"../components/Loading\";\nimport { api } from \"../lib/axios\";\nimport { HabitEmpty } from \"../components/HabitsEmpty\";\n\ninterface Params {\n    date: string\n}\n\ninterface DayInfoProps {\n    completedHabits: string[];\n    possibleHabits: {\n        id: string;\n        title: string;\n    }[];\n}\n\nexport function Habit() {\n    const [loading, setLoading] = useState(true);\n    const [dayInfo, setDayInfo] = useState<DayInfoProps | null>(null)\n    const [completedHabits, setCompletedHabits] = useState<string[]>([]);\n\n    const route = useRoute();\n    const { date } = route.params as Params;\n\n    const parsedDate = dayjs(date);\n    const isDateInPast = parsedDate.endOf('day').isBefore(new Date());\n    const dayOfWeek = parsedDate.format('dddd');\n    const dayAndMonth = parsedDate.format('DD/MM');\n\n    const habitsProgress = dayInfo?.possibleHabits.length ? generateProgressPercentage(dayInfo.possibleHabits.length, completedHabits.length) : 0\n\n    async function fetchHabits() {\n        try {\n            setLoading(true)\n\n            const response = await api.get('/day', { params: { date } });\n            setDayInfo(response.data)\n            setCompletedHabits(response.data.completedHabits);\n        } catch (error) {\n            console.log(error);\n            Alert.alert('Ops', 'Não foi possível carregar as informações dos hábitos.')\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    async function handleToggleHabit(habitId: string) {\n        try {\n            await api.patch(`/habits/${habitId}/toggle`)\n\n            if (completedHabits.includes(habitId)) {\n                setCompletedHabits(prevState => prevState.filter(habit => habit !== habitId))\n            } else {\n                setCompletedHabits(prevState => [...prevState, habitId])\n            }\n\n        } catch (error) {\n            console.log(error);\n            Alert.alert('Ops', 'Não foi possível atualizar o status do hábito');\n        }\n\n    }\n\n    useEffect(() => {\n        fetchHabits();\n    }, [])\n\n    if (loading) {\n        return (\n            <Loading />\n        )\n    }\n\n    return (\n        <View className=\"flex-1 bg-background px-8 pt-16\">\n            <ScrollView\n                showsVerticalScrollIndicator={false}\n                contentContainerStyle={{ paddingBottom: 100 }}\n            >\n                <BackButton />\n\n                <Text className=\"mt-6 text-zinc-400 font-semibold text-base lowercase\">\n                    {dayOfWeek}\n                </Text>\n\n                <Text className=\"text-white font-extrabold text-3xl\">\n                    {dayAndMonth}\n                </Text>\n\n                <ProgressBar progress={habitsProgress} />\n\n                <View className={clsx(\"mt-6\", {\n                    [\"opacity-50\"]: isDateInPast\n                })}>\n                    {\n                        dayInfo?.possibleHabits ? dayInfo?.possibleHabits.map(habit => (\n                            <CheckBox\n                                key={habit.id}\n                                title={habit.title}\n                                checked={completedHabits.includes(habit.id)}\n                                disabled={isDateInPast}\n                                onPress={() => handleToggleHabit(habit.id)}\n                            />\n                        ))\n                            :\n                            <HabitEmpty />\n\n                    }\n                </View>\n\n                {\n                    isDateInPast && (\n                        <Text className=\"text-white mt-10 text-center\">\n                            Você não pode editar um hábitos de uma passada.\n                        </Text>\n                    )\n                }\n            </ScrollView>\n        </View>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}